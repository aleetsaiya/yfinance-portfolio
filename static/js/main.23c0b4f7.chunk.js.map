{"version":3,"sources":["component/chart/DonutChart.jsx","component/Table.jsx","component/Info.jsx","component/chart/BarChart.jsx","icon/file-regular.svg","App.js","index.js"],"names":["DonutChart","props","series","labels","options","chart","foreColor","stroke","colors","dataLabels","enabled","type","Table","headRow","dataRows","targetData","useState","page","setPage","movePage","offset","length","Round","number","decimal","Math","round","pow","className","map","head","slice","row","index","target","aveCost","toString","onClick","disabled","Info","title","data","style","fontSize","BarChart","defaultSetting","yaxis","formatter","y","toFixed","plotOptions","bar","ranges","from","Number","NEGATIVE_INFINITY","to","color","MAX_SAFE_INTEGER","columnWidth","xaxis","categories","name","App","infoData","enterprises","tradingHistory","dataBundle","setDataBundle","fileLoaded","setFileLoaded","fileEnter","setFileEnter","seconds","setSeconds","holdingStockTable","tradingHistoryTable","useEffect","document","setTimeout","findEnterprise","ar","i","loadData","rows","indexBundle","symbol","indexOf","purchasePrice","quantity","tradingDate","currentPrice","isValidCSV","push","initData","getEnterprisesData","getTradingHistory","temp","totalCost","totalProfit","trading","parseFloat","totalQuantity","t","profit","th","sort","t1","t2","myAsset","ROI","d1","split","d2","parseInt","getEnterprisesSymbol","enterprise","getEnterprisesCost","getEnterpriseProfit","fileData","toast","error","onDragEnter","e","stopPropagation","preventDefault","onDragOver","onDragLeave","onDrop","dataTransfer","items","kind","file","getAsFile","reader","FileReader","onload","dirtyRows","result","drow","readAsBinaryString","backgroundColor","display","onFileLoaded","visibility","id","highlight","position","autoClose","theme","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.23c0b4f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst DonutChart = props => {\r\n    const { series, labels } = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            foreColor: '#fff',\r\n        },\r\n        stroke:{\r\n            colors:['#161d20']\r\n        },\r\n        colors: ['#48b5c4', '#1C4E80', '#0091D5', '#6cb4e4'],\r\n        dataLabels: {\r\n            enabled: false\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n            options={{\r\n                labels: labels,\r\n                ...defaultSetting\r\n            }} \r\n            series={series} \r\n            type=\"donut\" \r\n        />\r\n    )\r\n};\r\n\r\nexport default DonutChart;","import React , {useState} from 'react';\r\nimport './table.css'\r\n\r\nconst Table = props => {\r\n  const {headRow, dataRows, targetData} = props;\r\n  const [page, setPage] = useState(0);\r\n\r\n  const movePage = offset => {\r\n    if (page === 0 && offset === -1)\r\n      return;    \r\n    if ((page + offset) * 5 > dataRows.length)\r\n      return;\r\n\r\n    setPage(page + offset);\r\n  };\r\n\r\n  const getData = () => {\r\n    const data = dataRows.slice(page*5, page*5+5);\r\n      return (data.map((row, index) => \r\n      <tr key={index}>\r\n        {\r\n          targetData.map(target => {\r\n            if (target === 'averageCost') {\r\n              const aveCost = Round(row['totalCost'] / row['totalQuantity'], 2);\r\n              return <td key={aveCost.toString() + '-' + index.toString()}> {aveCost} </td>\r\n            }\r\n            return <td key={row[target].toString() + '-' + index.toString()}>\r\n              {typeof row[target] === 'number' ? Round(row[target], 2) : row[target]}\r\n            </td>;\r\n          })\r\n        }\r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  const Round = (number, decimal) => Math.round(number*Math.pow(10, decimal)) / Math.pow(10, decimal);\r\n  return (\r\n    <div className=\"tableBlock\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {headRow.map(head => <th key={head}>{head}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* 獲益的 column 新增 onclick 切換 % 或是金額 */}\r\n          {getData()}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"paging\">\r\n        <button className=\"page\" onClick={() => movePage(-1)} disabled={page === 0 ? 'disabled':''}>{'<'}</button>\r\n        <button className=\"page\" onClick={() => movePage(1)} disabled={(page + 1) * 5 > dataRows.length ? 'disabled':''}>{'>'}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nconst Info = props => {\r\n    const {title, data} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className='title' style={{fontSize: '15px'}}>{title}</div>\r\n            <div className='data' style={{fontSize: '35px'}}>{data}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst BarChart = props => {\r\n    const {series, labels} = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            type: 'bar',\r\n            foreColor: '#fff',\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function (y) {\r\n                    return y.toFixed(0) + \"%\";\r\n                }\r\n            }\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                colors: {\r\n                    ranges: [{\r\n                        from: Number.NEGATIVE_INFINITY,\r\n                        to: 0,\r\n                        color: '#F15B46'\r\n                    }, {\r\n                        from: 0,\r\n                        to: Number.MAX_SAFE_INTEGER,\r\n                        color: '#76c68f'\r\n                    }]\r\n                },\r\n                columnWidth: '45%',\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n          options={\r\n            {\r\n            xaxis: {\r\n                categories: labels\r\n            },\r\n              ...defaultSetting\r\n            }\r\n          } \r\n          series={[\r\n            {\r\n              name: 'Profit',\r\n              data: series\r\n            }\r\n          ]} \r\n          type=\"bar\" \r\n        />\r\n    )\r\n};\r\n\r\nexport default BarChart;","export default __webpack_public_path__ + \"static/media/file-regular.1caaa464.svg\";","import React, { useState, useEffect } from 'react';\nimport CSVReader from 'react-csv-reader';\nimport DonutChart from './component/chart/DonutChart';\nimport Table from './component/Table';\nimport Info from './component/Info';\nimport BarChart from './component/chart/BarChart';\nimport fileIcon from './icon/file-regular.svg';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './App.css';\n\nconst App = () => {\n  const [dataBundle, setDataBundle] = useState({\n    infoData: {},\n    enterprises: [],\n    tradingHistory: []\n  });\n  const [fileLoaded, setFileLoaded] = useState(false);\n  const [fileEnter, setFileEnter] = useState(false);\n  const [seconds, setSeconds] = useState(1);\n  const holdingStockTable = {\n    'headRow': ['代號', '股數', '單位成本', '最新價', '持股占比'],\n    'targetData': ['symbol', 'totalQuantity', 'averageCost', 'currentPrice', 'holdingPercent']\n  };\n  const tradingHistoryTable = {\n    'headRow': ['代號', '交易時間', '股數', '成交價', '金額'],\n    'targetData': ['symbol', 'tradingDate', 'quantity', 'purchasePrice', 'totalCost']\n  };\n\n  useEffect(() => {\n    document.title = \"Portfolio\";\n    if ( fileLoaded && seconds > 0) {\n      setTimeout(() => setSeconds(seconds - 1), 1000);\n    }\n  });\n\n  const demoData = () => {\n    initData(\n      [\n        [\n          \"SMH\",\"300\",\"2021/12/6\",\"16:00 EST\",\"-1.1499939\",\"299.57\",\"301.38\",\"290.51\",\"5105964\",\"20211206\",\"299.02\",\"0.96984\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211126\",\"334.11\",\"0.29929\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211206\",\"324.71\",\"1.75542\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211126\",\"424.96\",\"0.35298\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211206\",\"419.85\",\"2.71527\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211126\",\"396.07\",\"0.25248\",\"\",\"\",\"\",\"\"\n        ],\n        [\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211206\",\"384.08\",\"2.23912\",\"\",\"\",\"\",\"\"\n        ]\n      ],\n      {\n        \"symbol\": 0,\n        \"purchasePrice\": 10,\n        \"quantity\": 11,\n        \"tradingDate\": 9,\n        \"currentPrice\": 1\n      }\n    );\n  }\n\n  const findEnterprise = (ar, target) => {\n    for(let i = 0; i < ar.length; i++) {\n      if (ar[i]['symbol'] === target)\n        return i;\n    }\n    return false;\n  };\n\n  const loadData = rows => {\n    const data = [];\n    const indexBundle = {\n      symbol: rows[0].indexOf('Symbol'),\n      purchasePrice: rows[0].indexOf('Purchase Price'),\n      quantity: rows[0].indexOf('Quantity'),\n      tradingDate: rows[0].indexOf('Trade Date'),\n      currentPrice: rows[0].indexOf('Current Price')\n    }\n    if (isValidCSV(rows[0])) {\n      for(let i = 1; i < rows.length; i++) {\n          if (rows[i][indexBundle.symbol] && rows[i][indexBundle.purchasePrice] && rows[i][indexBundle.quantity])\n            data.push(rows[i]);\n      }\n      initData(data, indexBundle);\n    }\n  };\n\n  const initData = (data, indexBundle) => {\n    const {infoData, enterprises} = getEnterprisesData(data, indexBundle);\n    const tradingHistory = getTradingHistory(data, indexBundle);\n    setDataBundle({\n      enterprises: enterprises,\n      tradingHistory: tradingHistory,\n      infoData: infoData\n    });\n    setFileLoaded(true);\n  };\n\n  const getEnterprisesData = (tradingHistory, indexBundle) => {\n    const temp = [];\n    let totalCost = 0;\n    let totalProfit = 0;\n    for(let trading of tradingHistory) {\n      const symbol = trading[indexBundle.symbol];\n      const currentPrice = parseFloat(trading[indexBundle.currentPrice]);\n      const tradingDate = parseFloat(trading[indexBundle.tradingDate]);\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\n      const quantity = parseFloat(trading[indexBundle.quantity]);\n      \n      totalCost += (purchasePrice * quantity);\n      const index = findEnterprise(temp, symbol);\n      if (index !== false) {\n        temp[index]['tradingHistory'].push({\n          purchasePrice: purchasePrice,\n          quantity: quantity\n        })\n        temp[index]['totalCost'] += (purchasePrice * quantity);\n        temp[index]['totalQuantity'] += quantity;\n      }\n      else {\n        temp.push({\n          symbol: symbol,\n          currentPrice: currentPrice,\n          tradingDate: tradingDate,\n          totalCost: (purchasePrice * quantity),\n          totalQuantity: quantity,\n          tradingHistory: [{\n            purchasePrice: purchasePrice,\n            quantity: quantity\n          }]\n        })\n      }\n    }\n    // set enterprise's totalProfit\n    for(let t of temp) {\n      t['holdingPercent'] = (Math.round((t['totalCost'] / totalCost)*10000) / 100).toString() + '%';\n      let profit = 0;\n      const currentPrice = t['currentPrice'];\n      for(let th of t['tradingHistory']) {\n        profit += ((currentPrice - th['purchasePrice']) * th['quantity']);\n      }\n      t['totalProfit'] = profit;\n      totalProfit += profit;\n    }\n\n    // sort emterprise by holdingPercent\n    temp.sort((t1, t2) => {\n      return t2.totalCost - t1.totalCost;\n    })\n\n    return {\n      infoData: {\n        totalCost: (Math.round((totalCost)*100) / 100).toString(),\n        myAsset: (Math.round((totalCost + totalProfit)*100) / 100).toString(),\n        ROI: (Math.round((totalProfit / totalCost) * 10000) / 100).toString() + '%',\n        totalProfit: totalProfit > 0 ? '+' + (Math.round((totalProfit)*100) / 100).toString() : (Math.round((totalProfit)*100) / 100).toString()\n      },\n      enterprises: temp\n    };\n  };\n\n  const getTradingHistory = (tradingHistory, indexBundle) => {\n    const temp = [];\n    for(let trading of tradingHistory) {\n      const symbol = trading[indexBundle.symbol];\n      let tradingDate = trading[indexBundle.tradingDate];\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\n      const quantity = parseFloat(trading[indexBundle.quantity]);\n      \n      if (!tradingDate)\n        tradingDate = \"NaN\";\n      else\n        tradingDate = tradingDate.slice(0, 4) + '/' + tradingDate.slice(4, 6) + '/' + tradingDate.slice(6, 8);\n      temp.push({\n        symbol: symbol,\n        tradingDate: tradingDate,\n        quantity: quantity,\n        purchasePrice: purchasePrice,\n        totalCost: (purchasePrice * quantity)\n      })\n    }\n    // sort by tradingDate\n    temp.sort((t1, t2) => {\n      if (t1.tradingDate === \"NaN\" && t2.tradingDate !== \"NaN\")\n        return 1;\n      if (t1.tradingDate !== \"NaN\" && t2.tradingDate === \"NaN\")\n        return -1;\n      const d1 = t1.tradingDate.split('/');\n      const d2 = t2.tradingDate.split('/');\n      if (parseInt(d1[0]) > parseInt(d2[0]))\n        return -1;\n      if (parseInt(d1[0]) < parseInt(d2[0]))\n        return 1;\n      if (parseInt(d1[1]) > parseInt(d2[1]))\n        return -1;\n      if (parseInt(d1[1]) < parseInt(d2[1]))\n        return 1;\n      if (parseInt(d1[2]) > parseInt(d2[2]))\n        return -1;\n      if (parseInt(d1[2]) < parseInt(d2[2]))\n        return 1;\n    });\n    return temp;\n  };\n\n  const getEnterprisesSymbol = () => {\n    const temp = [];\n    for(let enterprise of dataBundle.enterprises) {\n      temp.push(enterprise.symbol);\n    }\n    return temp;\n  };\n\n  const getEnterprisesCost = () => {\n    const temp = [];\n    for(let enterprise of dataBundle.enterprises) {\n      temp.push(Math.round(enterprise.totalCost * 100) / 100);\n    }\n    return temp;\n  };\n\n  const getEnterpriseProfit = () => {\n    const temp = [];\n    for(let enterprise of dataBundle.enterprises) {\n      temp.push(Math.round((enterprise.totalProfit / enterprise.totalCost)*10000)/100);\n    }\n    return temp;\n  };\n\n  const isValidCSV = fileData => {\n    const checkList = ['Symbol', 'Purchase Price', 'Quantity', 'Current Price', 'Trade Date'];\n    for(let symbol of checkList) {\n      if (fileData.indexOf(symbol) === -1) {\n        setFileEnter(false);\n        toast.error('Please check your csv file.');\n        return false;\n      }\n    }\n    return true;\n  }\n\n  const onDragEnter = e => {\n    e.stopPropagation();\n    e.preventDefault();\n    setFileEnter(true);\n  }\n\n  const onDragOver = e => {\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  const onDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setFileEnter(false);\n  } \n\n  const onDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    // If dropped items aren't files, reject them\n    if (e.dataTransfer.items[0].kind === 'file') {\n      let file = e.dataTransfer.items[0].getAsFile();\n      const reader = new FileReader();\n      reader.onload = function () {\n        const dirtyRows = reader.result.split('\\n');\n        const rows = [];\n        for(let drow of dirtyRows) {\n          rows.push(drow.split(','));\n        }\n        loadData(rows);\n      };\n      // start reading the file. When it is done, calls the onload event defined above.\n      reader.readAsBinaryString(file);\n    }\n    else {\n      toast.error('Please check your csv file');\n      setFileEnter(false);\n    }\n  }\n\n  return (\n    <div className='App'>\n      <h1>Portfolio</h1>\n      <div className={(!fileLoaded) || (fileLoaded && seconds <= 0) ? \"hide\":\"load\"}></div>\n      <div className={fileLoaded ? \"hide\":\"\"}>\n        <div \n            className=\"drag-file-block\"\n            onDragEnter={onDragEnter}\n            onDragOver={onDragOver}\n            onDragLeave={onDragLeave}\n            onDrop={onDrop}\n            style={fileEnter ? {backgroundColor: 'rgba(173, 216, 230, .5)'}:{backgroundColor: 'inherit'}}\n        >\n          <div className=\"dropInfo\">將 csv 檔拖曳至此</div>\n        </div>\n        <label className=\"input-label\">\n          <span>📁 上傳檔案</span>\n          <div style={{display: 'none'}}>\n            <CSVReader onFileLoaded={rows => {\n              loadData(rows);\n            }} />\n          </div>\n        </label>\n        <label className=\"input-label\" onClick={demoData}>\n          <span>💡 使用範例</span>\n        </label>\n      </div>\n      <main style={(fileLoaded && seconds <= 0) ? {}:{visibility: \"hidden\"}}>\n        <div className=\"block-row\" id=\"info\">\n          <Info data={dataBundle.infoData.totalCost} title={'投入金額'}/>\n          <Info data={dataBundle.infoData.myAsset} title={'股票市值'}/>\n          <Info data={dataBundle.infoData.ROI} title={'報酬率'}  highlight={true}/>\n          <Info data={dataBundle.infoData.totalProfit} title={'總損益'}/>\n        </div>\n        <div className=\"block-title res-title\">\n          <h3>持股狀況</h3>\n        </div>\n        <div className=\"block-row\">\n          <div className=\"left chart\">\n            <DonutChart \n              series={getEnterprisesCost().length === 0 ? [80000, 45000, 16000] : getEnterprisesCost()} \n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3'] : getEnterprisesSymbol()}\n            />\n          </div>\n          <div className=\"right\">\n            <Table headRow={holdingStockTable.headRow} dataRows={dataBundle.enterprises} targetData={holdingStockTable.targetData}/>\n          </div>\n        </div>\n        <div className=\"block-row\">\n          <div className=\"left chart\" style={{color: '#000'}}>\n            <div className=\"block-title\">\n              <h3>績效</h3>\n            </div>\n            <BarChart \n              series={getEnterpriseProfit().length === 0 ? [5, 3, -10, 10, 7] : getEnterpriseProfit()} \n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3', 'stock4', 'stock5'] : getEnterprisesSymbol()}\n            />\n          </div>\n          <div className=\"right\">\n            <div className=\"block-title\">\n              <h3>交易紀錄</h3>\n            </div>\n            <Table headRow={tradingHistoryTable.headRow} dataRows={dataBundle.tradingHistory} targetData={tradingHistoryTable.targetData}/>\n          </div>\n        </div>\n        <div className=\"footer\"></div>\n      </main>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        theme=\"dark\"\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        />\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);"],"sourceRoot":""}