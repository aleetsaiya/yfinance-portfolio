{"version":3,"sources":["component/chart/DonutChart.jsx","component/Table.jsx","component/Info.jsx","component/chart/BarChart.jsx","component/chart/LineChart.jsx","App.js","index.js"],"names":["DonutChart","props","series","labels","options","chart","foreColor","stroke","colors","dataLabels","enabled","type","height","Table","headRow","dataRows","targetData","useState","page","setPage","movePage","offset","length","Round","number","decimal","Math","round","pow","className","map","head","slice","row","index","target","aveCost","toString","onClick","disabled","Info","title","data","style","fontSize","BarChart","defaultSetting","yaxis","formatter","y","toFixed","plotOptions","bar","ranges","from","Number","NEGATIVE_INFINITY","to","color","MAX_SAFE_INTEGER","columnWidth","xaxis","categories","name","LineChart","zoom","curve","value","App","infoData","enterprises","tradingHistory","dataBundle","setDataBundle","fileLoaded","setFileLoaded","fileEnter","setFileEnter","seconds","setSeconds","x","Date","toLocaleString","hisPerformance","setHisPerformance","holdingStockTable","tradingHistoryTable","useEffect","document","setTimeout","getHisPerformance","demoData","a","requestFinanceData","initData","findEnterprise","ar","i","loadData","rows","indexBundle","symbol","indexOf","purchasePrice","quantity","tradingDate","isValidCSV","push","getEnterprisesData","getTradingHistory","temp","totalCost","totalProfit","totalAsset","currentPrices","localData","JSON","parse","localStorage","getItem","l","trading","currentPrice","parseFloat","totalQuantity","t","profit","th","sort","t1","t2","holdingPercent","myAsset","ROI","d1","split","d2","parseInt","getEnterprisesSymbol","enterprise","getEnterprisesWeight","getEnterpriseProfit","method","url","headers","params","symbols","interval","range","axios","request","then","response","console","log","close","date","timestamp","setItem","stringify","catch","error","toast","monthsAgo","daysAgo","performanceHistory","firstDate","setMonth","getMonth","setDate","getDate","now","compareDate","b","ay","getFullYear","am","ad","by","bm","bd","d","currentAsset","pastPrice","s","price","trade","pp","find","p","toLocaleDateString","fileData","switchFocus","e","buttons","parentNode","childNodes","classList","remove","add","onDragEnter","stopPropagation","preventDefault","onDragOver","onDragLeave","onDrop","dataTransfer","items","kind","file","getAsFile","reader","FileReader","onload","dirtyRows","result","drow","readAsBinaryString","backgroundColor","display","onFileLoaded","visibility","id","highlight","position","autoClose","theme","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.09526280.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst DonutChart = props => {\r\n    const { series, labels } = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            foreColor: '#fff',\r\n        },\r\n        stroke:{\r\n            colors:['#161d20']\r\n        },\r\n        colors: ['#ED5565', '#FFCE54', '#48CFAD', '#4FC1E9', '#FC6E51', '#5D9CEC'],\r\n        dataLabels: {\r\n            enabled: false\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n            options={{\r\n                labels: labels,\r\n                ...defaultSetting\r\n            }} \r\n            series={series} \r\n            type=\"donut\"\r\n            height=\"200px\"\r\n        />\r\n    )\r\n};\r\n\r\nexport default DonutChart;","import React , {useState} from 'react';\r\nimport './table.css'\r\n\r\nconst Table = props => {\r\n  const {headRow, dataRows, targetData} = props;\r\n  const [page, setPage] = useState(0);\r\n\r\n  const movePage = offset => {\r\n    if (page === 0 && offset === -1)\r\n      return;    \r\n    if ((page + offset) * 5 > dataRows.length)\r\n      return;\r\n\r\n    setPage(page + offset);\r\n  };\r\n\r\n  const getData = () => {\r\n    const data = dataRows.slice(page*5, page*5+5);\r\n      return (data.map((row, index) => \r\n      <tr key={index}>\r\n        {\r\n          targetData.map(target => {\r\n            if (target === 'averageCost') {\r\n              const aveCost = Round(row['totalCost'] / row['totalQuantity'], 2);\r\n              return <td key={aveCost.toString() + '-' + index.toString()}> {aveCost} </td>\r\n            }\r\n            if (target === 'holdingPercent') {\r\n              return <td key={row[target].toString() + '-' + index.toString()}>{row[target] + '%'}</td>\r\n            }\r\n            return <td key={row[target].toString() + '-' + index.toString()}>\r\n              {typeof row[target] === 'number' ? Round(row[target], 2) : row[target]}\r\n            </td>;\r\n          })\r\n        }\r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  const Round = (number, decimal) => Math.round(number*Math.pow(10, decimal)) / Math.pow(10, decimal);\r\n  return (\r\n    <div className=\"tableBlock\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {headRow.map(head => <th key={head}>{head}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {getData()}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"paging\">\r\n        <button className=\"page\" onClick={() => movePage(-1)} disabled={page === 0 ? 'disabled':''}>{'<'}</button>\r\n        <button className=\"page\" onClick={() => movePage(1)} disabled={((page + 1) * 5) > dataRows.length ? 'disabled':''}>{'>'}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nconst Info = props => {\r\n    const {title, data} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className='title' style={{fontSize: '15px'}}>{title}</div>\r\n            <div className='data' style={{fontSize: '35px'}}>{data}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst BarChart = props => {\r\n    const {series, labels} = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            type: 'bar',\r\n            foreColor: '#fff',\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function (y) {\r\n                    return y.toFixed(2) + \"%\";\r\n                }\r\n            }\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                colors: {\r\n                    ranges: [{\r\n                        from: Number.NEGATIVE_INFINITY,\r\n                        to: 0,\r\n                        color: '#F15B46'\r\n                    }, {\r\n                        from: 0,\r\n                        to: Number.MAX_SAFE_INTEGER,\r\n                        color: '#76c68f'\r\n                    }]\r\n                },\r\n                columnWidth: '45%',\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n          options={\r\n            {\r\n            xaxis: {\r\n                categories: labels\r\n            },\r\n              ...defaultSetting\r\n            }\r\n          } \r\n          series={[\r\n            {\r\n              name: 'Profit',\r\n              data: series\r\n            }\r\n          ]} \r\n          type=\"bar\"\r\n          height=\"240px\"\r\n        />\r\n    )\r\n};\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst LineChart = props => {\r\n    const { data } = props;\r\n    const options = {\r\n        chart: {\r\n            height: 350,\r\n            type: 'area',\r\n            foreColor: '#fff',\r\n            zoom: {\r\n                enabled: false\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight'\r\n        },\r\n        xaxis: {\r\n            type: 'datetime'\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function(value) {\r\n                    return value.toFixed(1);\r\n                }\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n          options={options} \r\n          series={[{\r\n              name: \"price\",\r\n              data: data\r\n          }]} \r\n          type= 'area' \r\n          style={{color: '#000'}} \r\n          height=\"300px\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default LineChart;","import React, { useState, useEffect } from 'react';\r\nimport CSVReader from 'react-csv-reader';\r\nimport DonutChart from './component/chart/DonutChart';\r\nimport Table from './component/Table';\r\nimport Info from './component/Info';\r\nimport BarChart from './component/chart/BarChart';\r\nimport LineChart from './component/chart/LineChart';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [dataBundle, setDataBundle] = useState({\r\n    infoData: {},\r\n    enterprises: [],\r\n    tradingHistory: []\r\n  });\r\n  const [fileLoaded, setFileLoaded] = useState(false);\r\n  const [fileEnter, setFileEnter] = useState(false);\r\n  const [seconds, setSeconds] = useState(2);\r\n  const [hisPerformance, setHisPerformance] = useState([{\r\n    x: new Date(1640269800*1000).toLocaleString(),\r\n    y: 100\r\n  }]);\r\n\r\n  // let requestData;\r\n  const holdingStockTable = {\r\n    headRow: ['代號', '股數', '單位成本', '最新價', '持股占比'],\r\n    targetData: ['symbol', 'totalQuantity', 'averageCost', 'currentPrice', 'holdingPercent']\r\n  };\r\n  const tradingHistoryTable = {\r\n    headRow: ['代號', '交易時間', '股數', '成交價', '金額'],\r\n    targetData: ['symbol', 'tradingDate', 'quantity', 'purchasePrice', 'totalCost']\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Portfolio\";\r\n    if (fileLoaded && seconds > 0) {\r\n      setTimeout(() => setSeconds(seconds => seconds - 1), 1000);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataBundle.tradingHistory.length !== 0) {\r\n      getHisPerformance(0, 7);\r\n    }\r\n  }, [dataBundle]);\r\n\r\n  const demoData = async () => {\r\n    setFileLoaded(true);\r\n    await requestFinanceData();\r\n    initData(\r\n      [\r\n        [\r\n          \"SMH\",\"300\",\"2021/12/6\",\"16:00 EST\",\"-1.1499939\",\"299.57\",\"301.38\",\"290.51\",\"5105964\",\"20211206\",\"299.02\",\"0.96984\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211126\",\"334.11\",\"0.29929\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211206\",\"324.71\",\"1.75542\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211126\",\"424.96\",\"0.35298\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211206\",\"419.85\",\"2.71527\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211126\",\"396.07\",\"0.25248\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211206\",\"384.08\",\"2.23912\",\"\",\"\",\"\",\"\"\r\n        ]\r\n      ],\r\n      {\r\n        \"symbol\": 0,\r\n        \"purchasePrice\": 10,\r\n        \"quantity\": 11,\r\n        \"tradingDate\": 9\r\n      }\r\n    );\r\n  }\r\n\r\n  const findEnterprise = (ar, target) => {\r\n    for(let i = 0; i < ar.length; i++) {\r\n      if (ar[i]['symbol'] === target)\r\n        return i;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const loadData = async rows => {\r\n    const data = [];\r\n    const indexBundle = {\r\n      symbol: rows[0].indexOf('Symbol'),\r\n      purchasePrice: rows[0].indexOf('Purchase Price'),\r\n      quantity: rows[0].indexOf('Quantity'),\r\n      tradingDate: rows[0].indexOf('Trade Date'),\r\n    }\r\n    setFileLoaded(true);\r\n    await requestFinanceData();\r\n    if (isValidCSV(rows[0])) {\r\n      for(let i = 1; i < rows.length; i++) {\r\n          if (rows[i][indexBundle.symbol] && rows[i][indexBundle.purchasePrice] && rows[i][indexBundle.quantity] && rows[i][indexBundle.tradingDate])\r\n            data.push(rows[i]);\r\n      }\r\n      initData(data, indexBundle);\r\n    }\r\n  };\r\n\r\n  const initData = (data, indexBundle) => {\r\n    const {infoData, enterprises} = getEnterprisesData(data, indexBundle);\r\n    const tradingHistory = getTradingHistory(data, indexBundle);\r\n    setDataBundle({\r\n      enterprises: enterprises,\r\n      tradingHistory: tradingHistory,\r\n      infoData: infoData\r\n    });\r\n  };\r\n\r\n  const getEnterprisesData = (tradingHistory, indexBundle) => {\r\n    const temp = [];\r\n    let totalCost = 0;\r\n    let totalProfit = 0;\r\n    let totalAsset = 0;\r\n    const currentPrices = {};\r\n    const localData = JSON.parse(localStorage.getItem('symbols'));\r\n    for(let l of localData) {\r\n      currentPrices[l.symbol] = l.data[l.data.length - 1];\r\n    }\r\n\r\n    for(let trading of tradingHistory) {\r\n      const symbol = trading[indexBundle.symbol];\r\n      // const currentPrice = parseFloat(trading[indexBundle.currentPrice]);\r\n      const currentPrice = currentPrices[symbol];\r\n      const tradingDate = parseFloat(trading[indexBundle.tradingDate]);\r\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\r\n      const quantity = parseFloat(trading[indexBundle.quantity]);\r\n      \r\n      totalCost += (purchasePrice * quantity);\r\n      totalAsset += (currentPrice * quantity);\r\n      const index = findEnterprise(temp, symbol);\r\n      if (index !== false) {\r\n        temp[index]['tradingHistory'].push({\r\n          purchasePrice: purchasePrice,\r\n          quantity: quantity\r\n        })\r\n        temp[index]['totalCost'] += (purchasePrice * quantity);\r\n        temp[index]['totalQuantity'] += quantity;\r\n      }\r\n      else {\r\n        temp.push({\r\n          symbol: symbol,\r\n          currentPrice: currentPrice,\r\n          tradingDate: tradingDate,\r\n          totalCost: (purchasePrice * quantity),\r\n          totalQuantity: quantity,\r\n          tradingHistory: [{\r\n            purchasePrice: purchasePrice,\r\n            quantity: quantity\r\n          }]\r\n        })\r\n      }\r\n    }\r\n    // set enterprise's totalProfit\r\n    for(let t of temp) {\r\n      t['holdingPercent'] = (Math.round(((t['currentPrice'] * t['totalQuantity']) / totalAsset)*10000) / 100);\r\n      let profit = 0;\r\n      const currentPrice = t['currentPrice'];\r\n      for(let th of t['tradingHistory']) {\r\n        profit += ((currentPrice - th['purchasePrice']) * th['quantity']);\r\n      }\r\n      t['totalProfit'] = profit;\r\n      totalProfit += profit;\r\n    }\r\n\r\n    // sort emterprise by holdingPercent\r\n    temp.sort((t1, t2) => {\r\n      return t2.holdingPercent - t1.holdingPercent;\r\n    })\r\n\r\n    return {\r\n      infoData: {\r\n        totalCost: (Math.round((totalCost)*100) / 100).toString(),\r\n        myAsset: (Math.round((totalCost + totalProfit)*100) / 100).toString(),\r\n        ROI: (Math.round((totalProfit / totalCost) * 10000) / 100).toString() + '%',\r\n        totalProfit: totalProfit > 0 ? '+' + (Math.round((totalProfit)*100) / 100).toString() : (Math.round((totalProfit)*100) / 100).toString()\r\n      },\r\n      enterprises: temp\r\n    };\r\n  };\r\n\r\n  const getTradingHistory = (tradingHistory, indexBundle) => {\r\n    const temp = [];\r\n    for(let trading of tradingHistory) {\r\n      const symbol = trading[indexBundle.symbol];\r\n      let tradingDate = trading[indexBundle.tradingDate];\r\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\r\n      const quantity = parseFloat(trading[indexBundle.quantity]);\r\n      \r\n      if (!tradingDate)\r\n        tradingDate = \"NaN\";\r\n      else\r\n        tradingDate = tradingDate.slice(0, 4) + '/' + tradingDate.slice(4, 6) + '/' + tradingDate.slice(6, 8);\r\n      temp.push({\r\n        symbol: symbol,\r\n        tradingDate: tradingDate,\r\n        quantity: quantity,\r\n        purchasePrice: purchasePrice,\r\n        totalCost: (purchasePrice * quantity)\r\n      })\r\n    }\r\n    // sort by tradingDate\r\n    temp.sort((t1, t2) => {\r\n      if (t1.tradingDate === \"NaN\" && t2.tradingDate !== \"NaN\")\r\n        return 1;\r\n      if (t1.tradingDate !== \"NaN\" && t2.tradingDate === \"NaN\")\r\n        return -1;\r\n      const d1 = t1.tradingDate.split('/');\r\n      const d2 = t2.tradingDate.split('/');\r\n      if (parseInt(d1[0]) > parseInt(d2[0]))\r\n        return -1;\r\n      if (parseInt(d1[0]) < parseInt(d2[0]))\r\n        return 1;\r\n      if (parseInt(d1[1]) > parseInt(d2[1]))\r\n        return -1;\r\n      if (parseInt(d1[1]) < parseInt(d2[1]))\r\n        return 1;\r\n      if (parseInt(d1[2]) > parseInt(d2[2]))\r\n        return -1;\r\n      if (parseInt(d1[2]) < parseInt(d2[2]))\r\n        return 1;\r\n    });\r\n    return temp;\r\n  };\r\n\r\n  const getEnterprisesSymbol = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      temp.push(enterprise.symbol);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const getEnterprisesWeight = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      temp.push(enterprise.holdingPercent);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const getEnterpriseProfit = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      temp.push(Math.round((enterprise.totalProfit / enterprise.totalCost)*10000)/100);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const requestFinanceData = async () => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://yfapi.net/v8/finance/spark',\r\n      headers: {\r\n        'x-api-key': 'auNxCyh1Gf66HIXod3SN5aeAVI6JUB37Kd5iClYh'\r\n      },\r\n      params: {\r\n        symbols: \"MSFT,VOO,QQQ,SMH\",\r\n        interval: \"1d\",\r\n        range: \"1y\"\r\n      }\r\n    };\r\n    return axios.request(options).then(response => {\r\n      const data = response.data;\r\n      console.log('response', data);\r\n      const symbols = [];\r\n      for (let symbol in data) {\r\n        // const MSFT = {data: data.MSFT.close, date: timestampToDate(data.MSFT.timestamp)};\r\n        symbols.push({symbol: symbol, data: data[symbol].close, date: data[symbol].timestamp});\r\n      }\r\n      localStorage.setItem('symbols', JSON.stringify(symbols));\r\n      // getHisPerformance(0, 7);\r\n    }).catch(error => {\r\n      console.log(error);\r\n      toast.error('Unexpected error occurred.');\r\n    });\r\n  }\r\n\r\n  const getHisPerformance = (monthsAgo, daysAgo) => {\r\n    const performanceHistory = [];\r\n    // find first data date\r\n    const firstDate = new Date();\r\n    firstDate.setMonth(firstDate.getMonth() - monthsAgo);\r\n    firstDate.setDate(firstDate.getDate() - daysAgo);\r\n    const now = Date.now();\r\n    const compareDate = (a, b) => {\r\n      const ay = a.getFullYear();\r\n      const am = a.getMonth();\r\n      const ad = a.getDate();\r\n\r\n      const by = b.getFullYear();\r\n      const bm = b.getMonth();\r\n      const bd = b.getDate();\r\n\r\n      if (ay < by) return 1;\r\n      if (ay === by && am < bm) return 1;\r\n      if (ay === by && am === bm && ad < bd) return 1;\r\n      if (ay === by && am === bm && ad === bd) return 0;\r\n      return -1;\r\n    }\r\n    const symbols = JSON.parse(localStorage.getItem('symbols'));\r\n    // loop with every day\r\n    for(let d = firstDate; d <= now; d.setDate(d.getDate() + 1)) {\r\n      let currentAsset = 0;\r\n      // use request data to get every enterprise price in the past\r\n      const pastPrice = [];\r\n      // for every symbol\r\n      for(let s of symbols) {\r\n        // for every date in symbol\r\n        for(let i = 0; i < s.date.length; i++) {\r\n          if (i === s.date.length-1) {\r\n            pastPrice.push({symbol: s.symbol, price: s.data[i]});\r\n            break;\r\n          }\r\n          // 1個月前的每一天 == 資料紀錄的日期\r\n          if (compareDate(d, new Date(s.date[i]*1000)) === 0) {\r\n            pastPrice.push({symbol: s.symbol, price: s.data[i]});\r\n            break;\r\n          }\r\n          // 假日 or 休市日\r\n          if (compareDate(d, new Date(s.date[i]*1000)) === -1 && compareDate(d, new Date(s.date[i+1]*1000)) === 1) {\r\n            pastPrice.push({symbol: s.symbol, price: s.data[i-1]});\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      // loop with every tradingHistory\r\n      for(let trade of dataBundle.tradingHistory) {\r\n        // 交易時間比現在還要早\r\n        if (compareDate(d, new Date(trade.tradingDate)) === -1 || compareDate(d, new Date(trade.tradingDate)) === 0) {\r\n          const pp = pastPrice.find(p => p.symbol === trade.symbol);\r\n          currentAsset += (trade.quantity * pp.price);\r\n        }\r\n      }\r\n      performanceHistory.push({x: d.toLocaleDateString(), y: currentAsset});\r\n    }\r\n    setHisPerformance(performanceHistory);\r\n  }\r\n\r\n  const isValidCSV = fileData => {\r\n    const checkList = ['Symbol', 'Purchase Price', 'Quantity', 'Trade Date'];\r\n    for(let symbol of checkList) {\r\n      if (fileData.indexOf(symbol) === -1) {\r\n        setFileEnter(false);\r\n        toast.error('Please check your csv file.');\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const onDragEnter = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setFileEnter(true);\r\n  }\r\n\r\n  const onDragOver = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onDragLeave = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setFileEnter(false);\r\n  } \r\n\r\n  const onDrop = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // If dropped items aren't files, reject them\r\n    if (e.dataTransfer.items[0].kind === 'file') {\r\n      let file = e.dataTransfer.items[0].getAsFile();\r\n      const reader = new FileReader();\r\n      reader.onload = function () {\r\n        const dirtyRows = reader.result.split('\\n');\r\n        const rows = [];\r\n        for(let drow of dirtyRows) {\r\n          rows.push(drow.split(','));\r\n        }\r\n        loadData(rows);\r\n      };\r\n      // start reading the file. When it is done, calls the onload event defined above.\r\n      reader.readAsBinaryString(file);\r\n    }\r\n    else {\r\n      toast.error('Please check your csv file');\r\n      setFileEnter(false);\r\n    }\r\n  }\r\n\r\n  const switchFocus = e => {\r\n    const parent = e.target.parentNode;\r\n    const buttons = parent.childNodes;\r\n    for(let button of buttons) {\r\n      button.classList.remove('focus');\r\n    }\r\n    e.target.classList.add('focus');\r\n  }\r\n\r\n  return (\r\n    <div className='App'>\r\n      <h1>Portfolio</h1>\r\n      <div className={(!fileLoaded) || (fileLoaded && seconds <= 0) ? \"hide\":\"load\"}></div>\r\n      <div className={fileLoaded ? \"hide\":\"\"}>\r\n        <div \r\n            className=\"drag-file-block\"\r\n            onDragEnter={onDragEnter}\r\n            onDragOver={onDragOver}\r\n            onDragLeave={onDragLeave}\r\n            onDrop={onDrop}\r\n            style={fileEnter ? {backgroundColor: 'rgba(173, 216, 230, .5)'}:{backgroundColor: 'inherit'}}\r\n        >\r\n          <div className=\"dropInfo\">將 csv 檔拖曳至此</div>\r\n        </div>\r\n        <label className=\"input-label\">\r\n          <span>📁 上傳檔案</span>\r\n          <div style={{display: 'none'}}>\r\n            <CSVReader onFileLoaded={rows => {\r\n              loadData(rows);\r\n            }} />\r\n          </div>\r\n        </label>\r\n        <label className=\"input-label\" onClick={demoData}>\r\n          <span>💡 使用範例</span>\r\n        </label>\r\n      </div>\r\n      <main style={(fileLoaded && seconds <= 0) ? {}:{visibility: \"hidden\"}}>\r\n        <div className=\"block-row\" id=\"info\">\r\n          <Info data={dataBundle.infoData.totalCost} title={'投入金額'}/>\r\n          <Info data={dataBundle.infoData.myAsset} title={'股票市值'}/>\r\n          <Info data={dataBundle.infoData.ROI} title={'報酬率'}  highlight={true}/>\r\n          <Info data={dataBundle.infoData.totalProfit} title={'總損益'}/>\r\n        </div>\r\n        <div className=\"block-title res-title\">\r\n          <h3>持股狀況</h3>\r\n        </div>\r\n        <div className=\"block-row\">\r\n          <div className=\"left chart\">\r\n            <DonutChart \r\n              series={getEnterprisesWeight().length === 0 ? [80000, 45000, 16000] : getEnterprisesWeight()} \r\n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3'] : getEnterprisesSymbol()}\r\n            />\r\n          </div>\r\n          <div className=\"right\">\r\n            <Table headRow={holdingStockTable.headRow} dataRows={dataBundle.enterprises} targetData={holdingStockTable.targetData}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"block-row\">\r\n          <div className=\"left chart\" style={{color: '#000'}}>\r\n            <div className=\"block-title\">\r\n              <h3>績效</h3>\r\n            </div>\r\n            <BarChart \r\n              series={getEnterpriseProfit().length === 0 ? [5, 3, -10, 10, 7] : getEnterpriseProfit()} \r\n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3', 'stock4', 'stock5'] : getEnterprisesSymbol()}\r\n            />\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"block-title\">\r\n              <h3>交易紀錄</h3>\r\n            </div>\r\n            <Table headRow={tradingHistoryTable.headRow} dataRows={dataBundle.tradingHistory} targetData={tradingHistoryTable.targetData}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"block-title res-title\">\r\n          <h3>股票市值走勢</h3>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <button className='focus timeButton' onClick={e => {\r\n              getHisPerformance(0, 7);\r\n              switchFocus(e);\r\n              }}>7天</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(1, 0);\r\n              switchFocus(e);\r\n              }}>1月</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(6, 0);\r\n              switchFocus(e);\r\n            }}>6月</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(12, 0);\r\n              switchFocus(e);\r\n            }}>1年</button>\r\n          </div>\r\n          <LineChart data={hisPerformance}/>\r\n        </div>\r\n        <div className=\"footer\"></div>\r\n      </main>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        theme=\"dark\"\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);"],"sourceRoot":""}