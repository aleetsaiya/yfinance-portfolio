{"version":3,"sources":["component/chart/DonutChart.jsx","component/Table.jsx","component/Info.jsx","component/chart/BarChart.jsx","component/chart/LineChart.jsx","App.js","index.js"],"names":["DonutChart","props","series","labels","defaultSetting","chart","foreColor","stroke","colors","dataLabels","enabled","plotOptions","pie","donut","show","name","fontSize","fontWeight","value","fontFamily","formatter","val","parseFloat","toFixed","total","label","color","w","globals","seriesTotals","reduce","a","b","options","type","height","Table","headRow","dataRows","targetData","useState","page","setPage","movePage","offset","length","Round","number","decimal","Math","round","pow","className","map","head","style","cursor","slice","row","index","target","aveCost","toString","msg","onClick","disabled","Info","title","data","BarChart","yaxis","y","bar","ranges","from","Number","NEGATIVE_INFINITY","to","MAX_SAFE_INTEGER","columnWidth","xaxis","categories","LineChart","zoom","curve","App","infoData","totalCost","myAsset","ROI","totalProfit","enterprises","tradingHistory","dataBundle","setDataBundle","fileLoaded","setFileLoaded","fileEnter","setFileEnter","seconds","setSeconds","x","Date","toLocaleString","hisPerformance","setHisPerformance","holdingStockTable","setHoldingStockTable","tradingHistoryTable","useEffect","document","setTimeout","getHisPerformance","demoData","requestFinanceData","initData","loadData","rows","i","trim","isValidCSV","indexBundle","symbol","indexOf","purchasePrice","quantity","tradingDate","push","getEnterprisesData","getTradingHistory","temp","totalAsset","currentPrices","localData","JSON","parse","sessionStorage","getItem","l","findEnterprise","ar","trading","currentPrice","totalQuantity","t","profit","th","sort","t1","t2","holdingPercent","d1","split","d2","parseInt","getEnterprisesSymbol","enterprise","getEnterprisesWeight","price","getEnterpriseProfit","method","url","headers","params","symbols","interval","range","axios","request","then","response","console","log","close","date","timestamp","clear","setItem","stringify","catch","error","toast","monthsAgo","daysAgo","searchKey","performanceHistory","firstDate","setMonth","getMonth","setDate","getDate","now","compareDate","ay","getFullYear","am","ad","by","bm","bd","d","currentAsset","pastPrice","s","trade","pp","find","p","toLocaleDateString","fileData","errorMessage","csvReader","file","reader","FileReader","onload","dirtyRows","result","drow","readAsBinaryString","switchFocus","e","buttons","parentNode","childNodes","classList","remove","add","maxHeight","overflow","paddingLeft","paddingRight","onDragEnter","stopPropagation","preventDefault","onDragOver","onDragLeave","onDrop","dataTransfer","items","getAsFile","backgroundColor","size","display","accept","onChange","files","visibility","id","highlight","textContent","includes","position","autoClose","theme","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e545753a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst DonutChart = props => {\r\n    const { series, labels } = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            foreColor: '#fff',\r\n        },\r\n        stroke:{\r\n            colors:['#161d20']\r\n        },\r\n        colors: ['#ED5565', '#FFCE54', '#48CFAD', '#4FC1E9', '#FC6E51', '#5D9CEC'],\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            donut: {\r\n                labels: {\r\n                    show: true,\r\n                    name: {\r\n                        show: true,\r\n                        fontSize: '20',\r\n                        fontWeight: '700',\r\n                    },\r\n                    value: {\r\n                        show: true,\r\n                        fontSize: '16',\r\n                        fontFamily: 'Microsoft JhengHei',\r\n                        fontWeight: '700',\r\n                        formatter: val => {\r\n                            return '$' + parseFloat(parseFloat(val).toFixed(0));\r\n                        }\r\n                    },\r\n                    total: {\r\n                        show: true,\r\n                        label: 'Total',\r\n                        fontFamily: 'Microsoft JhengHei',\r\n                        color: '#fff',\r\n                        fontWeight: '700',\r\n                        formatter: (w) => {\r\n                            const total = w.globals.seriesTotals.reduce((a, b) => {\r\n                                return a + b\r\n                            }, 0);\r\n                            return '$' + parseFloat(total.toFixed(0));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n          }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n            options={{\r\n                labels: labels,\r\n                ...defaultSetting\r\n            }} \r\n            series={series} \r\n            type=\"donut\"\r\n            height=\"200px\"\r\n        />\r\n    )\r\n};\r\n\r\nexport default DonutChart;","import React , {useState} from 'react';\r\nimport './table.css'\r\n\r\nconst Table = props => {\r\n  const {headRow, dataRows, targetData} = props;\r\n  const [page, setPage] = useState(0);\r\n\r\n  const movePage = offset => {\r\n    if (page === 0 && offset === -1)\r\n      return;    \r\n    if ((page + offset) * 5 > dataRows.length)\r\n      return;\r\n\r\n    setPage(page + offset);\r\n  };\r\n\r\n  const getData = () => {\r\n    const data = dataRows.slice(page*5, page*5+5);\r\n      return (data.map((row, index) => \r\n      <tr key={index}>\r\n        {\r\n          targetData.map(target => {\r\n            if (target === 'averageCost') {\r\n              const aveCost = Round(row['totalCost'] / row['totalQuantity'], 2);\r\n              return <td key={aveCost.toString() + '-' + index.toString()}> {aveCost} </td>\r\n            }\r\n            if (target === 'holdingPercent') {\r\n              return <td key={row[target].toString() + '-' + index.toString()}>{row[target] + '%'}</td>\r\n            }\r\n            if (target === 'totalProfit' || target === 'profitPercent') {\r\n              const green = {color: '#76c68f'};\r\n              const red = {color: '#F15B46'};\r\n              let msg = row[target] < 0 ? row[target].toFixed(2) : '+' + row[target].toFixed(2);\r\n              if (target === 'profitPercent')\r\n                msg += '%';\r\n              return (\r\n                <td \r\n                  key={row[target].toString() + '-' + index.toString()}\r\n                  style={row[target] < 0 ? red : green}\r\n                >\r\n                  {msg}\r\n                </td>\r\n              )\r\n            }\r\n            return (\r\n              <td key={row[target].toString() + '-' + index.toString()}>\r\n                {typeof row[target] === 'number' ? Round(row[target], 2) : row[target]}\r\n              </td>\r\n            );\r\n          })\r\n        }\r\n      </tr>\r\n    ));\r\n  }\r\n\r\n  const Round = (number, decimal) => Math.round(number*Math.pow(10, decimal)) / Math.pow(10, decimal);\r\n  return (\r\n    <div className=\"tableBlock\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {headRow.map(head => {\r\n                return <th key={head} style={head === '損益' ? {cursor: 'pointer'}:{}}>{head}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {getData()}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"paging\">\r\n        <button className=\"page\" onClick={() => movePage(-1)} disabled={page === 0 ? 'disabled':''}>{'<'}</button>\r\n        <button className=\"page\" onClick={() => movePage(1)} disabled={((page + 1) * 5) > dataRows.length ? 'disabled':''}>{'>'}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nconst Info = props => {\r\n    const {title, data} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className='title' style={{fontSize: '15px'}}>{title}</div>\r\n            <div className='data' style={{fontSize: '35px'}}>{data}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst BarChart = props => {\r\n    const {series, labels} = props;\r\n    const defaultSetting = {\r\n        chart: {\r\n            type: 'bar',\r\n            foreColor: '#fff',\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function (y) {\r\n                    return y + \"%\";\r\n                }\r\n            }\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                colors: {\r\n                    ranges: [{\r\n                        from: Number.NEGATIVE_INFINITY,\r\n                        to: 0,\r\n                        color: '#F15B46'\r\n                    }, {\r\n                        from: 0,\r\n                        to: Number.MAX_SAFE_INTEGER,\r\n                        color: '#76c68f'\r\n                    }]\r\n                },\r\n                columnWidth: '45%',\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n          options={\r\n            {\r\n            xaxis: {\r\n                categories: labels\r\n            },\r\n              ...defaultSetting\r\n            }\r\n          } \r\n          series={[\r\n            {\r\n              name: 'Profit',\r\n              data: series\r\n            }\r\n          ]} \r\n          type=\"bar\"\r\n          height=\"240px\"\r\n        />\r\n    )\r\n};\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\nconst LineChart = props => {\r\n    const { data } = props;\r\n    const options = {\r\n        chart: {\r\n            height: 350,\r\n            type: 'area',\r\n            foreColor: '#fff',\r\n            zoom: {\r\n                enabled: false\r\n            }\r\n        },\r\n        stroke: {\r\n            curve: 'straight'\r\n        },\r\n        xaxis: {\r\n            type: 'datetime'\r\n        },\r\n        yaxis: {\r\n            labels: {\r\n                formatter: function(value) {\r\n                    return value.toFixed(1);\r\n                }\r\n            }\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n    };\r\n\r\n    return (\r\n        <ReactApexChart \r\n          options={options} \r\n          series={[{\r\n              name: \"price\",\r\n              data: data\r\n          }]} \r\n          type= 'area' \r\n          style={{color: '#000'}} \r\n          height=\"300px\"\r\n        />\r\n    )\r\n}\r\n\r\nexport default LineChart;","import React, { useState, useEffect } from 'react';\r\nimport DonutChart from './component/chart/DonutChart';\r\nimport Table from './component/Table';\r\nimport Info from './component/Info';\r\nimport BarChart from './component/chart/BarChart';\r\nimport LineChart from './component/chart/LineChart';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { FaFileCsv } from 'react-icons/fa';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [dataBundle, setDataBundle] = useState({\r\n    infoData: {\r\n      totalCost: 0,\r\n      myAsset: 0,\r\n      ROI: 0,\r\n      totalProfit: 0\r\n    },\r\n    enterprises: [],\r\n    tradingHistory: []\r\n  });\r\n  const [fileLoaded, setFileLoaded] = useState(false);\r\n  const [fileEnter, setFileEnter] = useState(false);\r\n  const [seconds, setSeconds] = useState(2);\r\n  const [hisPerformance, setHisPerformance] = useState([{\r\n    x: new Date(1640269800*1000).toLocaleString(),\r\n    y: 100\r\n  }]);\r\n\r\n  const [holdingStockTable, setHoldingStockTable] = useState({\r\n    headRow: ['代號', '股數', '單位成本', '損益', '占比'],\r\n    targetData: ['symbol', 'totalQuantity', 'averageCost', 'totalProfit', 'holdingPercent']\r\n  });\r\n  const tradingHistoryTable = {\r\n    headRow: ['代號', '交易時間', '股數', '成交價', '金額'],\r\n    targetData: ['symbol', 'tradingDate', 'quantity', 'purchasePrice', 'totalCost']\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Portfolio\";\r\n    if (fileLoaded && seconds > 0) {\r\n      setTimeout(() => setSeconds(seconds => seconds - 1), 1000);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (dataBundle.tradingHistory.length !== 0) {\r\n      getHisPerformance(0, 7);\r\n    }\r\n  }, [dataBundle]);\r\n\r\n  const demoData = async () => {\r\n    setFileLoaded(true);\r\n    await requestFinanceData();\r\n    initData(\r\n      [\r\n        [\r\n          \"SMH\",\"300\",\"2021/12/6\",\"16:00 EST\",\"-1.1499939\",\"299.57\",\"301.38\",\"290.51\",\"5105964\",\"20211206\",\"299.02\",\"0.96984\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211126\",\"334.11\",\"0.29929\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"MSFT\",\"326.19\",\"2021/12/6\",\"16:00 EST\",\"3.1799927\",\"323.95\",\"327.42\",\"319.23\",\"30032556\",\"20211206\",\"324.71\",\"1.75542\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211126\",\"424.96\",\"0.35298\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"VOO\",\"421.82\",\"2021/12/6\",\"16:00 EST\",\"4.98001\",\"419.41\",\"423.64\",\"417\",\"7124862\",\"20211206\",\"419.85\",\"2.71527\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211126\",\"396.07\",\"0.25248\",\"\",\"\",\"\",\"\"\r\n        ],\r\n        [\r\n          \"QQQ\",\"386.2\",\"2021/12/6\",\"16:00 EST\",\"3.0700073\",\"383.63\",\"387.6\",\"379.31\",\"64706783\",\"20211206\",\"384.08\",\"2.23912\",\"\",\"\",\"\",\"\"\r\n        ]\r\n      ],\r\n      {\r\n        \"symbol\": 0,\r\n        \"purchasePrice\": 10,\r\n        \"quantity\": 11,\r\n        \"tradingDate\": 9\r\n      }\r\n    );\r\n  }\r\n\r\n  const loadData = async rows => {\r\n    const data = [];\r\n    for(let i = 0; i < rows[0].length; i++) {\r\n      rows[0][i] = rows[0][i].trim();\r\n    }\r\n    if (isValidCSV(rows[0])) { \r\n      const indexBundle = {\r\n        symbol: rows[0].indexOf('Symbol'),\r\n        purchasePrice: rows[0].indexOf('Purchase Price'),\r\n        quantity: rows[0].indexOf('Quantity'),\r\n        tradingDate: rows[0].indexOf('Trade Date'),\r\n      }\r\n      for(let i = 1; i < rows.length; i++) {\r\n        if (rows[i][indexBundle.symbol] && rows[i][indexBundle.purchasePrice] && rows[i][indexBundle.quantity] && rows[i][indexBundle.tradingDate])\r\n          data.push(rows[i]);\r\n      }\r\n      setFileLoaded(true);\r\n      await requestFinanceData();\r\n      initData(data, indexBundle);\r\n    }\r\n  };\r\n\r\n  const initData = (data, indexBundle) => {\r\n    const {infoData, enterprises} = getEnterprisesData(data, indexBundle);\r\n    const tradingHistory = getTradingHistory(data, indexBundle);\r\n    setDataBundle({\r\n      enterprises: enterprises,\r\n      tradingHistory: tradingHistory,\r\n      infoData: infoData\r\n    });\r\n  };\r\n\r\n  const getEnterprisesData = (tradingHistory, indexBundle) => {\r\n    const temp = [];\r\n    let totalCost = 0;\r\n    let totalProfit = 0;\r\n    let totalAsset = 0;\r\n    const currentPrices = {};\r\n    const localData = JSON.parse(sessionStorage.getItem('symbols'));\r\n    for(let l of localData) {\r\n      currentPrices[l.symbol] = l.data[l.data.length - 1];\r\n    }\r\n    const findEnterprise = (ar, target) => {\r\n      for(let i = 0; i < ar.length; i++) {\r\n        if (ar[i]['symbol'] === target)\r\n          return i;\r\n      }\r\n      return false;\r\n    };\r\n    for(let trading of tradingHistory) {\r\n      const symbol = trading[indexBundle.symbol];\r\n      // const currentPrice = parseFloat(trading[indexBundle.currentPrice]);\r\n      const currentPrice = currentPrices[symbol];\r\n      const tradingDate = parseFloat(trading[indexBundle.tradingDate]);\r\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\r\n      const quantity = parseFloat(trading[indexBundle.quantity]);\r\n      \r\n      totalCost += (purchasePrice * quantity);\r\n      totalAsset += (currentPrice * quantity);\r\n\r\n      const index = findEnterprise(temp, symbol);\r\n      if (index !== false) {\r\n        temp[index]['tradingHistory'].push({\r\n          purchasePrice: purchasePrice,\r\n          quantity: quantity\r\n        })\r\n        temp[index]['totalCost'] += (purchasePrice * quantity);\r\n        temp[index]['totalQuantity'] += quantity;\r\n      }\r\n      else {\r\n        temp.push({\r\n          symbol: symbol,\r\n          currentPrice: currentPrice,\r\n          tradingDate: tradingDate,\r\n          totalCost: (purchasePrice * quantity),\r\n          totalQuantity: quantity,\r\n          tradingHistory: [{\r\n            purchasePrice: purchasePrice,\r\n            quantity: quantity\r\n          }]\r\n        })\r\n      }\r\n    }\r\n    // set enterprise's totalProfit\r\n    for(let t of temp) {\r\n      t['holdingPercent'] = (Math.round(((t['currentPrice'] * t['totalQuantity']) / totalAsset)*10000) / 100);\r\n      let profit = 0;\r\n      const currentPrice = t['currentPrice'];\r\n      for(let th of t['tradingHistory']) {\r\n        profit += ((currentPrice - th['purchasePrice']) * th['quantity']);\r\n      }\r\n      t['totalProfit'] = profit;\r\n      totalProfit += profit;\r\n    }\r\n\r\n    // set enterprise's profit percent\r\n    for(let t of temp) {\r\n      t['profitPercent'] = Math.round((t.totalProfit / t.totalCost)*10000)/100;\r\n    }\r\n\r\n    // sort emterprise by holdingPercent\r\n    temp.sort((t1, t2) => {\r\n      return t2.holdingPercent - t1.holdingPercent;\r\n    })\r\n    \r\n    return {\r\n      infoData: {\r\n        totalCost: totalCost,\r\n        myAsset: (totalCost + totalProfit),\r\n        ROI: (totalProfit / totalCost),\r\n        totalProfit: totalProfit\r\n      },\r\n      enterprises: temp\r\n    };\r\n  };\r\n\r\n  const getTradingHistory = (tradingHistory, indexBundle) => {\r\n    const temp = [];\r\n    for(let trading of tradingHistory) {\r\n      const symbol = trading[indexBundle.symbol];\r\n      let tradingDate = trading[indexBundle.tradingDate];\r\n      const purchasePrice = parseFloat(trading[indexBundle.purchasePrice]);\r\n      const quantity = parseFloat(trading[indexBundle.quantity]);\r\n      \r\n      if (!tradingDate)\r\n        tradingDate = \"NaN\";\r\n      else\r\n        tradingDate = tradingDate.slice(0, 4) + '/' + tradingDate.slice(4, 6) + '/' + tradingDate.slice(6, 8);\r\n      temp.push({\r\n        symbol: symbol,\r\n        tradingDate: tradingDate,\r\n        quantity: quantity,\r\n        purchasePrice: purchasePrice,\r\n        totalCost: (purchasePrice * quantity)\r\n      })\r\n    }\r\n    // sort by tradingDate\r\n    temp.sort((t1, t2) => {\r\n      if (t1.tradingDate === \"NaN\" && t2.tradingDate !== \"NaN\")\r\n        return 1;\r\n      if (t1.tradingDate !== \"NaN\" && t2.tradingDate === \"NaN\")\r\n        return -1;\r\n      const d1 = t1.tradingDate.split('/');\r\n      const d2 = t2.tradingDate.split('/');\r\n      if (parseInt(d1[0]) > parseInt(d2[0]))\r\n        return -1;\r\n      if (parseInt(d1[0]) < parseInt(d2[0]))\r\n        return 1;\r\n      if (parseInt(d1[1]) > parseInt(d2[1]))\r\n        return -1;\r\n      if (parseInt(d1[1]) < parseInt(d2[1]))\r\n        return 1;\r\n      if (parseInt(d1[2]) > parseInt(d2[2]))\r\n        return -1;\r\n      if (parseInt(d1[2]) < parseInt(d2[2]))\r\n        return 1;\r\n    });\r\n    return temp;\r\n  };\r\n\r\n  const getEnterprisesSymbol = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      temp.push(enterprise.symbol);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const getEnterprisesWeight = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      const price = (enterprise.totalQuantity * enterprise.currentPrice).toFixed(2);\r\n      temp.push(parseFloat(price));\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const getEnterpriseProfit = () => {\r\n    const temp = [];\r\n    for(let enterprise of dataBundle.enterprises) {\r\n      temp.push(Math.round((enterprise.totalProfit / enterprise.totalCost)*10000)/100);\r\n    }\r\n    return temp;\r\n  };\r\n\r\n  const requestFinanceData = async () => {\r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://yfapi.net/v8/finance/spark',\r\n      headers: {\r\n        'x-api-key': 'auNxCyh1Gf66HIXod3SN5aeAVI6JUB37Kd5iClYh'\r\n      },\r\n      params: {\r\n        symbols: \"MSFT,VOO,QQQ,SMH\",\r\n        interval: \"1d\",\r\n        range: \"1y\"\r\n      }\r\n    };\r\n    return axios.request(options).then(response => {\r\n      const data = response.data;\r\n      console.log('response', data);\r\n      const symbols = [];\r\n      for (let symbol in data) {\r\n        // const MSFT = {data: data.MSFT.close, date: timestampToDate(data.MSFT.timestamp)};\r\n        symbols.push({symbol: symbol, data: data[symbol].close, date: data[symbol].timestamp});\r\n      }\r\n      sessionStorage.clear();\r\n      sessionStorage.setItem('symbols', JSON.stringify(symbols));\r\n      // getHisPerformance(0, 7);\r\n    }).catch(error => {\r\n      console.log(error);\r\n      toast.error('請求資料時發生錯誤.');\r\n    });\r\n  }\r\n\r\n  const getHisPerformance = (monthsAgo, daysAgo) => {\r\n    const searchKey = monthsAgo + '-' + daysAgo + '-' + 'performance';\r\n    let performanceHistory = sessionStorage.getItem(searchKey);\r\n    if (performanceHistory) {\r\n      console.log('get search:', searchKey);\r\n      setHisPerformance(JSON.parse(performanceHistory));\r\n    }\r\n    else {\r\n      performanceHistory = [];\r\n      // find first data date\r\n      const firstDate = new Date();\r\n      firstDate.setMonth(firstDate.getMonth() - monthsAgo);\r\n      firstDate.setDate(firstDate.getDate() - daysAgo);\r\n      const now = Date.now();\r\n      const compareDate = (a, b) => {\r\n        const ay = a.getFullYear();\r\n        const am = a.getMonth();\r\n        const ad = a.getDate();\r\n  \r\n        const by = b.getFullYear();\r\n        const bm = b.getMonth();\r\n        const bd = b.getDate();\r\n  \r\n        if (ay < by) return 1;\r\n        if (ay === by && am < bm) return 1;\r\n        if (ay === by && am === bm && ad < bd) return 1;\r\n        if (ay === by && am === bm && ad === bd) return 0;\r\n        return -1;\r\n      }\r\n      const symbols = JSON.parse(sessionStorage.getItem('symbols'));\r\n      // loop with every day\r\n      for(let d = firstDate; d <= now; d.setDate(d.getDate() + 1)) {\r\n        let currentAsset = 0;\r\n        // use request data to get every enterprise price in the past\r\n        const pastPrice = [];\r\n        // for every symbol\r\n        for(let s of symbols) {\r\n          // for every date in symbol\r\n          for(let i = 0; i < s.date.length; i++) {\r\n            if (i === s.date.length-1) {\r\n              pastPrice.push({symbol: s.symbol, price: s.data[i]});\r\n              break;\r\n            }\r\n            // 1個月前的每一天 == 資料紀錄的日期\r\n            if (compareDate(d, new Date(s.date[i]*1000)) === 0) {\r\n              pastPrice.push({symbol: s.symbol, price: s.data[i]});\r\n              break;\r\n            }\r\n            // 假日 or 休市日\r\n            if (compareDate(d, new Date(s.date[i]*1000)) === -1 && compareDate(d, new Date(s.date[i+1]*1000)) === 1) {\r\n              pastPrice.push({symbol: s.symbol, price: s.data[i-1]});\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // loop with every tradingHistory\r\n        for(let trade of dataBundle.tradingHistory) {\r\n          // 交易時間比現在還要早\r\n          if (compareDate(d, new Date(trade.tradingDate)) === -1 || compareDate(d, new Date(trade.tradingDate)) === 0) {\r\n            const pp = pastPrice.find(p => p.symbol === trade.symbol);\r\n            currentAsset += (trade.quantity * pp.price);\r\n          }\r\n        }\r\n        performanceHistory.push({x: d.toLocaleDateString(), y: currentAsset});\r\n      }\r\n      sessionStorage.setItem(searchKey, JSON.stringify(performanceHistory));\r\n      setHisPerformance(performanceHistory);\r\n    }\r\n  }\r\n\r\n  const isValidCSV = fileData => {\r\n    const checkList = ['Symbol', 'Purchase Price', 'Quantity', 'Trade Date'];\r\n    for(let symbol of checkList) {\r\n      if (fileData.indexOf(symbol) === -1) {\r\n        setFileEnter(false);\r\n        const errorMessage = 'csv檔缺少 \"' + symbol + '\" 欄位.';\r\n        toast.error(errorMessage);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const onDragEnter = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setFileEnter(true);\r\n  }\r\n\r\n  const onDragOver = e => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n  }\r\n\r\n  const onDragLeave = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setFileEnter(false);\r\n  } \r\n\r\n  const onDrop = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const file = e.dataTransfer.items[0].getAsFile();\r\n    csvReader(file);\r\n  }\r\n\r\n  const onChange = e => {\r\n    const file = e.target.files[0];\r\n    csvReader(file);\r\n    e.target.value = \"\";\r\n  }\r\n\r\n  const csvReader = file => {\r\n    const reader = new FileReader();\r\n    reader.onload = function () {\r\n      const dirtyRows = reader.result.split('\\n');\r\n      const rows = [];\r\n      for(let drow of dirtyRows) {\r\n        rows.push(drow.split(','));\r\n      }\r\n      loadData(rows);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n\r\n  const switchFocus = e => {\r\n    const parent = e.target.parentNode;\r\n    const buttons = parent.childNodes;\r\n    for(let button of buttons) {\r\n      button.classList.remove('focus');\r\n    }\r\n    e.target.classList.add('focus');\r\n  }\r\n\r\n  const handleTableClick = e => {\r\n    if (e.target.textContent !== '損益')\r\n      return;\r\n    \r\n    if (holdingStockTable.targetData.includes('profitPercent')) {\r\n      setHoldingStockTable(\r\n        {\r\n          headRow: holdingStockTable.headRow,\r\n          targetData: ['symbol', 'totalQuantity', 'averageCost', 'totalProfit', 'holdingPercent']\r\n        }\r\n      );\r\n    }\r\n    else {\r\n      setHoldingStockTable(\r\n        {\r\n          headRow: holdingStockTable.headRow,\r\n          targetData: ['symbol', 'totalQuantity', 'averageCost', 'profitPercent', 'holdingPercent']\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='App' style={fileLoaded ? {} : {maxHeight: '100vh', overflow: 'hidden', paddingLeft: '6px', paddingRight: '6px'}}>\r\n      <h1>My Portfolio</h1>\r\n      <div className={(!fileLoaded) || (fileLoaded && seconds <= 0) ? \"hide\":\"load\"}></div>\r\n      <div className={fileLoaded ? \"hide\":\"\"}>\r\n        <div \r\n            className=\"drag-file-block\"\r\n            onDragEnter={onDragEnter}\r\n            onDragOver={onDragOver}\r\n            onDragLeave={onDragLeave}\r\n            onDrop={onDrop}\r\n            style={fileEnter ? {backgroundColor: 'rgba(173, 216, 230, .5)'}:{backgroundColor: 'inherit'}}\r\n        >\r\n          <div className=\"dropInfo\">\r\n            <div className=\"fileIcon\"><FaFileCsv size={30}/></div>\r\n            <div>將 csv 檔拖曳至此</div>\r\n          </div>\r\n        </div>\r\n        <label className=\"input-label\">\r\n          <span>📁 上傳檔案</span>\r\n          <div style={{display: 'none'}}>\r\n            <input type=\"file\" accept='.csv' onChange={onChange}/>\r\n          </div>\r\n        </label>\r\n        <label className=\"input-label\" onClick={demoData}>\r\n          <span>💡 使用範例</span>\r\n        </label>\r\n      </div>\r\n      <main style={(fileLoaded && seconds <= 0) ? {}:{visibility: \"hidden\"}}>\r\n        <div className=\"block-row\" id=\"info\">\r\n          <Info data={parseFloat(dataBundle.infoData.totalCost.toFixed(2))} title={'投入金額'}/>\r\n          <Info data={parseFloat(dataBundle.infoData.myAsset.toFixed(2))} title={'股票市值'}/>\r\n          <Info data={parseFloat((dataBundle.infoData.ROI*100).toFixed(2)) + '%'} title={'報酬率'}  highlight={true}/>\r\n          <Info data={parseFloat(dataBundle.infoData.totalProfit) < 0 ?\r\n            parseFloat(parseFloat(dataBundle.infoData.totalProfit).toFixed(2)) :\r\n            '+' + parseFloat(parseFloat(dataBundle.infoData.totalProfit).toFixed(2))}\r\n            title={'總損益'}\r\n          />\r\n        </div>\r\n        <div className=\"block-title res-title\">\r\n          <h3>持股狀況</h3>\r\n        </div>\r\n        <div className=\"block-row\">\r\n          <div className=\"left chart\">\r\n            <DonutChart \r\n              series={getEnterprisesWeight().length === 0 ? [80000, 45000, 16000] : getEnterprisesWeight()} \r\n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3'] : getEnterprisesSymbol()}\r\n            />\r\n          </div>\r\n          <div className=\"right\" onClick={handleTableClick}>\r\n            <Table headRow={holdingStockTable.headRow} dataRows={dataBundle.enterprises} targetData={holdingStockTable.targetData}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"block-row\">\r\n          <div className=\"left chart\" style={{color: '#000'}}>\r\n            <div className=\"block-title\">\r\n              <h3>績效</h3>\r\n            </div>\r\n            <BarChart \r\n              series={getEnterpriseProfit().length === 0 ? [5, 3, -10, 10, 7] : getEnterpriseProfit()} \r\n              labels={getEnterprisesSymbol().length === 0 ? ['stock1', 'stock2', 'stock3', 'stock4', 'stock5'] : getEnterprisesSymbol()}\r\n            />\r\n          </div>\r\n          <div className=\"right\">\r\n            <div className=\"block-title\">\r\n              <h3>交易紀錄</h3>\r\n            </div>\r\n            <Table headRow={tradingHistoryTable.headRow} dataRows={dataBundle.tradingHistory} targetData={tradingHistoryTable.targetData}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"block-title res-title\">\r\n          <h3>股票市值走勢</h3>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <button className='focus timeButton' onClick={e => {\r\n              getHisPerformance(0, 7);\r\n              switchFocus(e);\r\n              }}>7天</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(1, 0);\r\n              switchFocus(e);\r\n              }}>1月</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(6, 0);\r\n              switchFocus(e);\r\n            }}>6月</button>\r\n            <button className=\"timeButton\" onClick={e => {\r\n              getHisPerformance(12, 0);\r\n              switchFocus(e);\r\n            }}>1年</button>\r\n          </div>\r\n          <LineChart data={hisPerformance}/>\r\n        </div>\r\n        <div className=\"footer\"></div>\r\n      </main>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={5000}\r\n        theme=\"dark\"\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);"],"sourceRoot":""}